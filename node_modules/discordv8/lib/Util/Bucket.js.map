{"version":3,"sources":["../../src/Util/Bucket.js"],"names":["Bucket","constructor","tokenLimit","interval","extraTime","lastReset","tokens","lastSend","_queue","queue","func","push","check","timeout","length","Date","now","Math","max","val","shift","setTimeout"],"mappings":"AAAA;;;;;AAEe,MAAMA,MAAN,CAAa;AAAE;AAC1BC,gBAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAC9B,aAAKD,UAAL,GAAkBA,UAAlB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,SAAL,GAAiB,GAAjB;AACA,aAAKC,SAAL,GAAiB,KAAKC,MAAL,GAAc,KAAKC,QAAL,GAAgB,CAA/C;AACA,aAAKC,MAAL,GAAc,EAAd;AACH;;AAEDC,UAAMC,IAAN,EAAY;AACR,aAAKF,MAAL,CAAYG,IAAZ,CAAiBD,IAAjB;AACA,aAAKE,KAAL;AACH;;AAEDA,YAAQ;AACJ,YAAG,KAAKC,OAAL,IAAgB,KAAKL,MAAL,CAAYM,MAAZ,KAAuB,CAA1C,EAA6C;AACzC;AACH;AACD,YAAG,KAAKT,SAAL,GAAiB,KAAKF,QAAtB,GAAiC,KAAKC,SAAtC,GAAkDW,KAAKC,GAAL,EAArD,EAAiE;AAC7D,iBAAKX,SAAL,GAAiBU,KAAKC,GAAL,EAAjB;AACA,iBAAKV,MAAL,GAAcW,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKZ,MAAL,GAAc,KAAKJ,UAA/B,CAAd;AACH;;AAED,YAAIiB,GAAJ;AACA,eAAM,KAAKX,MAAL,CAAYM,MAAZ,GAAqB,CAArB,IAA0B,KAAKR,MAAL,GAAc,KAAKJ,UAAnD,EAA+D;AAC3D,iBAAKI,MAAL;AACA,iBAAKE,MAAL,CAAYY,KAAZ;AACA,iBAAKb,QAAL,GAAgBQ,KAAKC,GAAL,EAAhB;AACH;;AAED,YAAG,KAAKR,MAAL,CAAYM,MAAZ,GAAqB,CAArB,IAA0B,CAAC,KAAKD,OAAnC,EAA4C;AACxC,iBAAKA,OAAL,GAAeQ,WAAW,MAAM;AAC5B,qBAAKR,OAAL,GAAe,IAAf;AACA,qBAAKD,KAAL;AACH,aAHc,EAGZ,KAAKN,MAAL,GAAc,KAAKJ,UAAnB,GAAgC,CAAhC,GAAoCe,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKb,SAAL,GAAiB,KAAKF,QAAtB,GAAiC,KAAKC,SAAtC,GAAkDW,KAAKC,GAAL,EAA9D,CAHxB,CAAf;AAIH;AACJ;AApCuB;kBAAPhB,M","file":"Bucket.js","sourcesContent":["\"use strict\";\n\nexport default class Bucket { // Adapted from Eris\n    constructor(tokenLimit, interval) {\n        this.tokenLimit = tokenLimit;\n        this.interval = interval;\n        this.extraTime = 500;\n        this.lastReset = this.tokens = this.lastSend = 0;\n        this._queue = [];\n    }\n\n    queue(func) {\n        this._queue.push(func);\n        this.check();\n    }\n\n    check() {\n        if(this.timeout || this._queue.length === 0) {\n            return;\n        }\n        if(this.lastReset + this.interval + this.extraTime < Date.now()) {\n            this.lastReset = Date.now();\n            this.tokens = Math.max(0, this.tokens - this.tokenLimit);\n        }\n\n        var val;\n        while(this._queue.length > 0 && this.tokens < this.tokenLimit) {\n            this.tokens++;\n            this._queue.shift()();\n            this.lastSend = Date.now();\n        }\n\n        if(this._queue.length > 0 && !this.timeout) {\n            this.timeout = setTimeout(() => {\n                this.timeout = null;\n                this.check();\n            }, this.tokens < this.tokenLimit ? 1 : Math.max(0, this.lastReset + this.interval + this.extraTime - Date.now()));\n        }\n    }\n}\n"]}