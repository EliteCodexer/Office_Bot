{"version":3,"sources":["../../src/Structures/VoiceChannel.js"],"names":["VoiceChannel","constructor","data","client","server","members","userLimit","user_limit","_bitrate","bitrate","Math","round","toObject","obj","map","member","join","callback","joinVoiceChannel","apply","setUserLimit","setChannelUserLimit","arguments","setBitrate","setChannelBitrate"],"mappings":"AAAA;;;;;;AAEA;;;;AACA;;;;AACA;;;;AAEe,MAAMA,YAAN,iCAAwC;AACtDC,aAAYC,IAAZ,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAiC;AAChC,QAAMF,IAAN,EAAYC,MAAZ,EAAoBC,MAApB;AACA,OAAKC,OAAL,GAAeH,KAAKG,OAAL,IAAgB,qBAA/B;AACA,OAAKC,SAAL,GAAiBJ,KAAKK,UAAL,IAAmB,CAApC;AACA,OAAKC,QAAL,GAAgBN,KAAKO,OAAL,IAAgB,KAAhC,CAJgC,CAIO;AACvC,OAAKA,OAAL,GAAeC,KAAKC,KAAL,CAAW,KAAKH,QAAL,GAAgB,IAA3B,CAAf,CALgC,CAKiB;AACjD;;AAEDI,YAAW;AACV,MAAIC,MAAM,MAAMD,QAAN,EAAV;;AAEAC,MAAIP,SAAJ,GAAgB,KAAKA,SAArB;AACAO,MAAIJ,OAAJ,GAAc,KAAKA,OAAnB;AACAI,MAAIR,OAAJ,GAAc,KAAKA,OAAL,CAAaS,GAAb,CAAiBC,UAAUA,OAAOH,QAAP,EAA3B,CAAd;;AAEA,SAAOC,GAAP;AACA;;AAEDG,MAAKC,WAAW,YAAY,CAAG,CAA/B,EAAiC;AAChC,SAAO,KAAKd,MAAL,CAAYe,gBAAZ,CAA6BC,KAA7B,CAAmC,KAAKhB,MAAxC,EAAgD,CAAC,IAAD,EAAOc,QAAP,CAAhD,CAAP;AACA;;AAEDG,gBAAe;AACd,SAAO,KAAKjB,MAAL,CAAYkB,mBAAZ,CAAgCF,KAAhC,CAAsC,KAAKhB,MAA3C,EAAmD,8BAAI,IAAJ,EAAUmB,SAAV,CAAnD,CAAP;AACA;;AAEDC,cAAa;AACZ,SAAO,KAAKpB,MAAL,CAAYqB,iBAAZ,CAA8BL,KAA9B,CAAoC,KAAKhB,MAAzC,EAAiD,8BAAI,IAAJ,EAAUmB,SAAV,CAAjD,CAAP;AACA;AA7BqD;kBAAlCtB,Y","file":"VoiceChannel.js","sourcesContent":["\"use strict\";\n\nimport ServerChannel from \"./ServerChannel\";\nimport Cache from \"../Util/Cache\";\nimport {reg} from \"../Util/ArgumentRegulariser\";\n\nexport default class VoiceChannel extends ServerChannel{\n\tconstructor(data, client, server){\n\t\tsuper(data, client, server);\n\t\tthis.members = data.members || new Cache();\n\t\tthis.userLimit = data.user_limit || 0;\n\t\tthis._bitrate = data.bitrate || 64000; // incase somebody wants to access the bps value???\n\t\tthis.bitrate = Math.round(this._bitrate / 1000); // store as kbps\n\t}\n\n\ttoObject() {\n\t\tlet obj = super.toObject();\n\t\t\n\t\tobj.userLimit = this.userLimit;\n\t\tobj.bitrate = this.bitrate;\n\t\tobj.members = this.members.map(member => member.toObject());\n\n\t\treturn obj;\n\t}\n\n\tjoin(callback = function () { }) {\n\t\treturn this.client.joinVoiceChannel.apply(this.client, [this, callback]);\n\t}\n\n\tsetUserLimit() {\n\t\treturn this.client.setChannelUserLimit.apply(this.client, reg(this, arguments));\n\t}\n\n\tsetBitrate() {\n\t\treturn this.client.setChannelBitrate.apply(this.client, reg(this, arguments));\n\t}\n}\n"]}