{"version":3,"sources":["../../../src/Client/Resolver/Resolver.js"],"names":["Resolver","constructor","internal","resolveToBase64","resource","Buffer","toString","resolveInviteID","id","String","indexOf","split","pop","resolveServer","server","servers","get","channel","resolveRole","role","roles","resolveFile","test","Promise","resolve","reject","buffer","parse","res","cb","setEncoding","data","on","chunk","end","err","body","resolveMentions","_mentions","changed","mention","match","user","users","substring","length","push","details","detailsOf","replace","RegExp","nick","username","discriminator","name","channels","resolveString","Array","join","resolveUser","author","lmsg","lastMessage","owner","recipient","resolveWebhook","find","s","webhooks","has","hasOwnProperty","error","Error","resolveMessage","resolveChannel","voiceChannel","defaultChannel","private_channels","pmchat","recipients","equals","startPM"],"mappings":"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","file":"Resolver.js","sourcesContent":["\"use strict\";\n/* global Buffer */\n\n/**\n * Resolves supplied data type to a Channel. If a String, it should be a Channel ID.\n * @typedef {(Channel|Server|Message|User|String)} ChannelResolvable\n*/\n/**\n * Resolves supplied data type to a TextChannel or PMChannel. If a String, it should be a Channel ID.\n * @typedef {(TextChannel|PMChannel|Server|Message|User|String)} TextChannelResolvable\n*/\n/**\n * If given an array, turns it into a newline-separated string.\n * @typedef {(String|Array)} StringResolvable\n*/\n/**\n * Resolves supplied data type to a Message. If a channel, it is the latest message from that channel.\n * @typedef {(Message|TextChannel|PMChannel)} MessageResolvable\n*/\n/**\n * Resolves supplied data type to a Server. If a String, it should be the server's ID.\n * @typedef {(Server|ServerChannel|Message|String)} ServerResolvable\n */\n/**\n * Resolves supplied data type to something that can be attached to a message. If a String, it can be an URL or a path to a local file.\n * @typedef {(String|ReadableStream|Buffer)} FileResolvable\n */\n/**\n * Resolves supplied data type to an invite ID. If a String, it should be an ID or a direct URL to the invite.\n * @typedef {(Invite|String)} InviteIDResolvable\n */\n\nimport fs from \"fs\";\nimport request from \"superagent\";\n\nimport User from \"../../Structures/User\";\nimport Channel from \"../../Structures/Channel\";\nimport TextChannel from \"../../Structures/TextChannel\";\nimport VoiceChannel from \"../../Structures/VoiceChannel\";\nimport ServerChannel from \"../../Structures/ServerChannel\";\nimport PMChannel from \"../../Structures/PMChannel\";\nimport Role from \"../../Structures/Role\";\nimport Server from \"../../Structures/Server\";\nimport Message from \"../../Structures/Message\";\nimport Invite from \"../../Structures/Invite\";\nimport Webhook from \"../../Structures/Webhook\";\nimport VoiceConnection from \"../../Voice/VoiceConnection\";\n\nexport default class Resolver {\n\tconstructor(internal) {\n\t\tthis.internal = internal;\n\t}\n\n\tresolveToBase64(resource) {\n\t\tif (resource instanceof Buffer) {\n\t\t\tresource = resource.toString(\"base64\");\n\t\t\tresource = \"data:image/jpg;base64,\" + resource;\n\t\t}\n\t\treturn resource;\n\t}\n\n\tresolveInviteID(resource) {\n\t\tif (resource instanceof Invite) {\n\t\t\treturn resource.id;\n\t\t}\n\t\tif (typeof resource === \"string\" || resource instanceof String) {\n\t\t\tif (resource.indexOf(\"http\") === 0) {\n\t\t\t\tvar split = resource.split(\"/\");\n\t\t\t\treturn split.pop();\n\t\t\t}\n\t\t\treturn resource;\n\t\t}\n\t\treturn null;\n\t}\n\n\tresolveServer(resource) {\n\t\tif (resource instanceof Server) {\n\t\t\treturn resource;\n\t\t}\n\t\tif (resource instanceof ServerChannel) {\n\t\t\treturn resource.server;\n\t\t}\n\t\tif (resource instanceof String || typeof resource === \"string\") {\n\t\t\treturn this.internal.servers.get(\"id\", resource);\n\t\t}\n\t\tif (resource instanceof Message) {\n\t\t\tif (resource.channel instanceof TextChannel) {\n\t\t\t\treturn resource.channel.server;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tresolveRole(resource) {\n\t\tif (resource instanceof Role) {\n\t\t\treturn resource;\n\t\t}\n\t\tif (resource instanceof String || typeof resource === \"string\") {\n\t\t\tvar role = null;\n\t\t\tfor (var server of this.internal.servers) {\n\t\t\t\tif (role = server.roles.get(\"id\", resource)) {\n\t\t\t\t\treturn role;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tresolveFile(resource) {\n\t\tif (typeof resource === \"string\" || resource instanceof String) {\n\t\t\tif (/^https?:\\/\\//.test(resource)) {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\trequest.get(resource).buffer().parse((res, cb) => {\n\t\t\t\t\t\tres.setEncoding(\"binary\");\n\t\t\t\t\t\tres.data = \"\";\n\t\t\t\t\t\tres.on(\"data\", (chunk) => {\n\t\t\t\t\t\t\tres.data += chunk;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres.on(\"end\", () => {\n\t\t\t\t\t\t\tcb(null, new Buffer(res.data, \"binary\"));\n\t\t\t\t\t\t});\n\t\t\t\t\t}).end((err, res) => {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(resource);\n\t\t\t}\n\t\t}\n\t\treturn Promise.resolve(resource);\n\t}\n\n\tresolveMentions(resource, channel) {\n\t\tvar _mentions = [];\n\t\tvar changed = resource;\n\t\tfor (var mention of (resource.match(/<@\\!?[0-9]+>/g) || [])) { // username mention\n\t\t\tif (mention[2] === '!') {\n\t\t\t\tvar user = this.internal.users.get(\"id\", mention.substring(3, mention.length - 1));\n\t\t\t\tif (user) {\n\t\t\t\t\t_mentions.push(user);\n\t\t\t\t\tvar details = channel.server && channel.server.detailsOf(user);\n\t\t\t\t\tif (details) {\n\t\t\t\t\t\tchanged = changed.replace(new RegExp(mention, \"g\"), `@${details.nick || (user.username + \"#\" + user.discriminator)}`);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar user = this.internal.users.get(\"id\", mention.substring(2, mention.length - 1));\n\t\t\t\tif (user) {\n\t\t\t\t\t_mentions.push(user);\n\t\t\t\t\tchanged = changed.replace(new RegExp(mention, \"g\"), `@${user.username + \"#\" + user.discriminator}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(channel && channel.server && channel.server.roles) {\n\t\t\tfor (var mention of (resource.match(/<@&[0-9]+>/g) || [])) { // role mention\n\t\t\t\tvar role = channel.server.roles.get(\"id\", mention.substring(3, mention.length - 1));\n\t\t\t\tif (role) {\n\t\t\t\t\tchanged = changed.replace(new RegExp(mention, \"g\"), `@${role.name}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (var mention of (resource.match(/<#[0-9]+>/g) || [])) { // channel mention\n\t\t\tvar channel = this.internal.channels.get(\"id\", mention.substring(2, mention.length - 1));\n\t\t\tif (channel) {\n\t\t\t\tchanged = changed.replace(new RegExp(mention, \"g\"), `#${channel.name}`);\n\t\t\t}\n\t\t}\n\t\treturn [_mentions, changed];\n\t}\n\n\tresolveString(resource) {\n\n\t\t// accepts Array, Channel, Server, User, Message, String and anything\n\t\t// toString()-able\n\n\t\tif (resource instanceof Array) {\n\t\t\tresource = resource.join(\"\\n\");\n\t\t}\n\n\t\treturn resource.toString();\n\t}\n\n\tresolveUser(resource) {\n\t\t/*\n\t\t\taccepts a Message, Channel, Server, String ID, User, PMChannel\n\t\t*/\n\t\tif (resource instanceof User) {\n\t\t\treturn resource;\n\t\t}\n\t\tif (resource instanceof Message) {\n\t\t\treturn resource.author;\n\t\t}\n\t\tif (resource instanceof TextChannel) {\n\t\t\tvar lmsg = resource.lastMessage;\n\t\t\tif (lmsg) {\n\t\t\t\treturn lmsg.author;\n\t\t\t}\n\t\t}\n\t\tif (resource instanceof Server) {\n\t\t\treturn resource.owner;\n\t\t}\n\t\tif (resource instanceof PMChannel) {\n\t\t\treturn resource.recipient;\n\t\t}\n\t\tif (resource instanceof String || typeof resource === \"string\") {\n\t\t\treturn this.internal.users.get(\"id\", resource);\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tresolveWebhook(resource) {\n\t\t/*\n\t\t accepts a Webhook\n\t\t */\n\t\tif (resource instanceof Webhook) {\n\t\t\treturn Promise.resolve(resource);\n\t\t}\n\t\tif (resource instanceof String || typeof resource === \"string\") {\n\t\t\tlet server = this.internal.servers.find(s => s.webhooks.has(\"id\", resource));\n\t\t\tif (server) {\n\t\t\t\treturn Promise.resolve(server.webhooks.get(\"id\", resource));\n\t\t\t}\n\t\t}\n\t\tif (typeof resource === \"object\" && resource.hasOwnProperty(\"id\") && resource.hasOwnProperty(\"token\")) {\n\t\t\treturn Promise.resolve(resource);\n\t\t}\n\n\t\tvar error = new Error(\"Could not resolve webhook\");\n\t\terror.resource = resource;\n\t\treturn Promise.reject(error);\n\t}\n\n\tresolveMessage(resource) {\n\t\t// accepts a Message, PMChannel & TextChannel\n\n\t\tif (resource instanceof TextChannel || resource instanceof PMChannel) {\n\t\t\treturn resource.lastMessage;\n\t\t}\n\t\tif (resource instanceof Message) {\n\t\t\treturn resource;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tresolveChannel(resource) {\n\t\t/*\n\t\t\taccepts a Message, Channel, VoiceConnection, Server, String ID, User\n\t\t*/\n\n\t\tif (resource instanceof Message) {\n\t\t\treturn Promise.resolve(resource.channel);\n\t\t}\n\t\tif (resource instanceof Channel) {\n\t\t\treturn Promise.resolve(resource);\n\t\t}\n\t\tif (resource instanceof VoiceConnection) {\n\t\t\treturn Promise.resolve(resource.voiceChannel);\n\t\t}\n\t\tif (resource instanceof Server) {\n\t\t\treturn Promise.resolve(resource.defaultChannel);\n\t\t}\n\t\tif (resource instanceof String || typeof resource === \"string\") {\n\t\t\tvar user = this.internal.users.get(\"id\", resource);\n\t\t\tif (user) {\n\t\t\t\tresource = user;\n\t\t\t} else {\n\t\t\t\treturn Promise.resolve(this.internal.channels.get(\"id\", resource) || this.internal.private_channels.get(\"id\", resource));\n\t\t\t}\n\t\t}\n\t\tif (resource instanceof User) {\n\t\t\t// see if a PM exists\n\t\t\tfor (var pmchat of this.internal.private_channels) {\n\t\t\t\tif (pmchat.recipients.length === 1 && pmchat.recipient && pmchat.recipient.equals(resource)) {\n\t\t\t\t\treturn Promise.resolve(pmchat);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// PM does not exist :\\\n\t\t\treturn this.internal.startPM(resource);\n\t\t}\n\t\tvar error = new Error(\"Could not resolve channel\");\n\t\terror.resource = resource;\n\t\treturn Promise.reject(error);\n\t}\n}\n"]}