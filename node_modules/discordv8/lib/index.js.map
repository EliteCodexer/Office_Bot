{"version":3,"sources":["../src/index.js"],"names":["Client","Channel","ChannelPermissions","Invite","Message","PermissionOverwrite","PMChannel","Role","Server","ServerChannel","TextChannel","User","VoiceChannel","Webhook","Constants","Cache"],"mappings":"AAAA;;AAEA;;;;;;;;AAQA;;;;;;;;;AASA;;;;;;AAMA;;;;;;;;;;;AAOA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;kBAEe;AACdA,0BADc;AAEdC,4BAFc;AAGdC,kDAHc;AAIdC,0BAJc;AAKdC,4BALc;AAMdC,oDANc;AAOdC,gCAPc;AAQdC,sBARc;AASdC,0BATc;AAUdC,wCAVc;AAWdC,oCAXc;AAYdC,sBAZc;AAadC,sCAbc;AAcdC,4BAdc;AAedC,gCAfc;AAgBdC;AAhBc,C","file":"index.js","sourcesContent":["\"use strict\";\n\n/**\n * Object containing user agent data required for API requests.\n * @typedef {(object)} UserAgent\n * @property {string} [url=https://github.com/hydrabolt/discord.js] URL to the repository/homepage of the creator.\n * @property {string} [version=6.0.0] version of your bot.\n * @property {string} full stringified user-agent that is generate automatically upon changes. Read-only.\n*/\n\n/**\n * Object containing properties that can be used to alter the client's functionality.\n * @typedef {(object)} ClientOptions\n * @property {boolean} [compress=true] whether or not large packets that are sent over WebSockets should be compressed.\n * @property {boolean} [autoReconnect=false] whether the Client should attempt to automatically reconnect if it is disconnected.\n * @property {boolean} [rateLimitAsError=false] whether rejections to API requests due to rate-limiting should be treated as errors.\n * @property {Number} [largeThreshold=250] an integer between 0 and 250. When a server has more users than `options.largeThreshold`, only the online/active users are cached.\n*/\n\n/**\n * Object containing properties that will be applied when deleting messages\n * @typedef {(object)} MessageDeletionOptions\n * @property {Number} [wait] If set, the message will be deleted after `options.wait` milliseconds.\n */\n\n/**\n * Object containing properties that will be used when fetching channel logs. You cannot specify _both_ `options.before` and `options.after`\n * @typedef {(object)} ChannelLogsOptions\n * @property {MessageResolvable} [before] When fetching logs, it will fetch from messages before `options.before` but not including it.\n * @property {MessageResolvable} [after] When fetching logs, it will fetch from messages after `options.after` but not including it.\n */\n\nimport Client from \"./Client/Client\";\nimport Channel from \"./Structures/Channel\";\nimport ChannelPermissions from \"./Structures/ChannelPermissions\";\nimport Invite from \"./Structures/Invite\";\nimport Message from \"./Structures/Message\";\nimport PermissionOverwrite from \"./Structures/PermissionOverwrite\";\nimport PMChannel from \"./Structures/PMChannel\";\nimport Role from \"./Structures/Role\";\nimport Server from \"./Structures/Server\";\nimport ServerChannel from \"./Structures/ServerChannel\";\nimport TextChannel from \"./Structures/TextChannel\";\nimport User from \"./Structures/User\";\nimport VoiceChannel from \"./Structures/VoiceChannel\";\nimport Webhook from \"./Structures/Webhook\";\nimport Constants from \"./Constants\";\nimport Cache from \"./Util/Cache.js\";\n\nexport default {\n\tClient,\n\tChannel,\n\tChannelPermissions,\n\tInvite,\n\tMessage,\n\tPermissionOverwrite,\n\tPMChannel,\n\tRole,\n\tServer,\n\tServerChannel,\n\tTextChannel,\n\tUser,\n\tVoiceChannel,\n\tWebhook,\n\tConstants,\n\tCache\n};\n"]}