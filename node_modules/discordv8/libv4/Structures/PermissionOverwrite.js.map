{"version":3,"sources":["../../src/Structures/PermissionOverwrite.js"],"names":["PermissionOverwrite","data","id","type","deny","allow","keys","obj","k","allowedArray","forEach","permission","String","deniedArray","allowed","permName","push","denied"],"mappings":"AAAA;;;;;;;;AAEA;;;;IAEqBA,mB;AAEpB,8BAAYC,IAAZ,EAAkB;AAAA;;AACjB,OAAKC,EAAL,GAAUD,KAAKC,EAAf;AACA,OAAKC,IAAL,GAAYF,KAAKE,IAAjB,CAFiB,CAEM;AACvB,OAAKC,IAAL,GAAYH,KAAKG,IAAjB;AACA,OAAKC,KAAL,GAAaJ,KAAKI,KAAlB;AACA;;AAED;;;;;6BAgCW;AACV,OAAIC,OAAO,CAAC,IAAD,EAAO,MAAP,EAAe,OAAf,EAAwB,MAAxB,CAAX;AAAA,OACCC,MAAM,EADP;;AADU;AAAA;AAAA;;AAAA;AAIV,yBAAcD,IAAd,8HAAoB;AAAA,SAAXE,CAAW;;AACnBD,SAAIC,CAAJ,IAAS,KAAKA,CAAL,CAAT;AACA;AANS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAQV,UAAOD,GAAP;AACA;;;6BAEUE,Y,EAAa;AAAA;;AACvBA,gBAAaC,OAAb,CAAsB,UAACC,UAAD,EAAgB;AACrC,QAAGA,sBAAsBC,MAAtB,IAAgC,OAAOD,UAAP,KAAsB,QAAzD,EAAkE;AACjEA,kBAAa,uBAAYA,UAAZ,CAAb;AACA;AACD,QAAGA,UAAH,EAAc;AACb,WAAKN,KAAL,IAAe,KAAKM,UAApB;AACA;AACD,IAPD;AAQA;;;4BAESE,W,EAAY;AAAA;;AACrBA,eAAYH,OAAZ,CAAqB,UAACC,UAAD,EAAgB;AACpC,QAAGA,sBAAsBC,MAAtB,IAAgC,OAAOD,UAAP,KAAsB,QAAzD,EAAkE;AACjEA,kBAAa,uBAAYA,UAAZ,CAAb;AACA;AACD,QAAGA,UAAH,EAAc;AACb,YAAKP,IAAL,IAAc,KAAKO,UAAnB;AACA;AACD,IAPD;AAQA;;;sBA9DY;AACZ,OAAIG,UAAU,EAAd;AACA,QAAK,IAAIC,QAAT,4BAAkC;AACjC,QAAGA,aAAa,aAAb,IAA8BA,aAAa,gBAA9C,EAA+D;AAC9D;AACA;AACA;;AAED,QAAG,CAAC,EAAE,KAAKV,KAAL,GAAa,uBAAYU,QAAZ,CAAf,CAAJ,EAA0C;AACzCD,aAAQE,IAAR,CAAaD,QAAb;AACA;AACD;AACD,UAAOD,OAAP;AACA;;AAED;;;;sBACY;AACX,OAAIG,SAAS,EAAb;AACA,QAAK,IAAIF,QAAT,4BAAkC;AACjC,QAAGA,aAAa,aAAb,IAA8BA,aAAa,gBAA9C,EAA+D;AAC9D;AACA;AACA;;AAED,QAAG,CAAC,EAAE,KAAKX,IAAL,GAAY,uBAAYW,QAAZ,CAAd,CAAJ,EAAyC;AACxCE,YAAOD,IAAP,CAAYD,QAAZ;AACA;AACD;AACD,UAAOE,MAAP;AACA;;;;;;kBAvCmBjB,mB","file":"PermissionOverwrite.js","sourcesContent":["\"use strict\";\n\nimport {Permissions} from \"../Constants\";\n\nexport default class PermissionOverwrite {\n\n\tconstructor(data) {\n\t\tthis.id = data.id;\n\t\tthis.type = data.type; // member or role\n\t\tthis.deny = data.deny;\n\t\tthis.allow = data.allow;\n\t}\n\n\t// returns an array of allowed permissions\n\tget allowed(){\n\t\tvar allowed = [];\n\t\tfor( var permName in Permissions ){\n\t\t\tif(permName === \"manageRoles\" || permName === \"manageChannels\"){\n\t\t\t\t// these permissions do not exist in overwrites.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(!!(this.allow & Permissions[permName])){\n\t\t\t\tallowed.push(permName);\n\t\t\t}\n\t\t}\n\t\treturn allowed;\n\t}\n\n\t// returns an array of denied permissions\n\tget denied(){\n\t\tvar denied = [];\n\t\tfor( var permName in Permissions ){\n\t\t\tif(permName === \"manageRoles\" || permName === \"manageChannels\"){\n\t\t\t\t// these permissions do not exist in overwrites.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(!!(this.deny & Permissions[permName])){\n\t\t\t\tdenied.push(permName);\n\t\t\t}\n\t\t}\n\t\treturn denied;\n\t}\n\n\ttoObject() {\n\t\tlet keys = ['id', 'type', 'allow', 'deny'],\n\t\t\tobj = {};\n\n\t\tfor (let k of keys) {\n\t\t\tobj[k] = this[k];\n\t\t}\n\t\t\n\t\treturn obj;\n\t}\n\n\tsetAllowed(allowedArray){\n\t\tallowedArray.forEach( (permission) => {\n\t\t\tif(permission instanceof String || typeof permission === \"string\"){\n\t\t\t\tpermission = Permissions[permission];\n\t\t\t}\n\t\t\tif(permission){\n\t\t\t\tthis.allow |= (1 << permission);\n\t\t\t}\n\t\t} );\n\t}\n\n\tsetDenied(deniedArray){\n\t\tdeniedArray.forEach( (permission) => {\n\t\t\tif(permission instanceof String || typeof permission === \"string\"){\n\t\t\t\tpermission = Permissions[permission];\n\t\t\t}\n\t\t\tif(permission){\n\t\t\t\tthis.deny |= (1 << permission);\n\t\t\t}\n\t\t} );\n\t}\n}\n"]}