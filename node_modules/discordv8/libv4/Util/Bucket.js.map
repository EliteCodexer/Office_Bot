{"version":3,"sources":["../../src/Util/Bucket.js"],"names":["Bucket","tokenLimit","interval","extraTime","lastReset","tokens","lastSend","_queue","func","push","check","timeout","length","Date","now","Math","max","val","shift","setTimeout"],"mappings":"AAAA;;;;;;;;;;IAEqBA,M;AAAS;AAC1B,oBAAYC,UAAZ,EAAwBC,QAAxB,EAAkC;AAAA;;AAC9B,aAAKD,UAAL,GAAkBA,UAAlB;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA,aAAKC,SAAL,GAAiB,GAAjB;AACA,aAAKC,SAAL,GAAiB,KAAKC,MAAL,GAAc,KAAKC,QAAL,GAAgB,CAA/C;AACA,aAAKC,MAAL,GAAc,EAAd;AACH;;;;8BAEKC,I,EAAM;AACR,iBAAKD,MAAL,CAAYE,IAAZ,CAAiBD,IAAjB;AACA,iBAAKE,KAAL;AACH;;;gCAEO;AAAA;;AACJ,gBAAG,KAAKC,OAAL,IAAgB,KAAKJ,MAAL,CAAYK,MAAZ,KAAuB,CAA1C,EAA6C;AACzC;AACH;AACD,gBAAG,KAAKR,SAAL,GAAiB,KAAKF,QAAtB,GAAiC,KAAKC,SAAtC,GAAkDU,KAAKC,GAAL,EAArD,EAAiE;AAC7D,qBAAKV,SAAL,GAAiBS,KAAKC,GAAL,EAAjB;AACA,qBAAKT,MAAL,GAAcU,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKX,MAAL,GAAc,KAAKJ,UAA/B,CAAd;AACH;;AAED,gBAAIgB,GAAJ;AACA,mBAAM,KAAKV,MAAL,CAAYK,MAAZ,GAAqB,CAArB,IAA0B,KAAKP,MAAL,GAAc,KAAKJ,UAAnD,EAA+D;AAC3D,qBAAKI,MAAL;AACA,qBAAKE,MAAL,CAAYW,KAAZ;AACA,qBAAKZ,QAAL,GAAgBO,KAAKC,GAAL,EAAhB;AACH;;AAED,gBAAG,KAAKP,MAAL,CAAYK,MAAZ,GAAqB,CAArB,IAA0B,CAAC,KAAKD,OAAnC,EAA4C;AACxC,qBAAKA,OAAL,GAAeQ,WAAW,YAAM;AAC5B,0BAAKR,OAAL,GAAe,IAAf;AACA,0BAAKD,KAAL;AACH,iBAHc,EAGZ,KAAKL,MAAL,GAAc,KAAKJ,UAAnB,GAAgC,CAAhC,GAAoCc,KAAKC,GAAL,CAAS,CAAT,EAAY,KAAKZ,SAAL,GAAiB,KAAKF,QAAtB,GAAiC,KAAKC,SAAtC,GAAkDU,KAAKC,GAAL,EAA9D,CAHxB,CAAf;AAIH;AACJ;;;;;;kBApCgBd,M","file":"Bucket.js","sourcesContent":["\"use strict\";\n\nexport default class Bucket { // Adapted from Eris\n    constructor(tokenLimit, interval) {\n        this.tokenLimit = tokenLimit;\n        this.interval = interval;\n        this.extraTime = 500;\n        this.lastReset = this.tokens = this.lastSend = 0;\n        this._queue = [];\n    }\n\n    queue(func) {\n        this._queue.push(func);\n        this.check();\n    }\n\n    check() {\n        if(this.timeout || this._queue.length === 0) {\n            return;\n        }\n        if(this.lastReset + this.interval + this.extraTime < Date.now()) {\n            this.lastReset = Date.now();\n            this.tokens = Math.max(0, this.tokens - this.tokenLimit);\n        }\n\n        var val;\n        while(this._queue.length > 0 && this.tokens < this.tokenLimit) {\n            this.tokens++;\n            this._queue.shift()();\n            this.lastSend = Date.now();\n        }\n\n        if(this._queue.length > 0 && !this.timeout) {\n            this.timeout = setTimeout(() => {\n                this.timeout = null;\n                this.check();\n            }, this.tokens < this.tokenLimit ? 1 : Math.max(0, this.lastReset + this.interval + this.extraTime - Date.now()));\n        }\n    }\n}\n"]}